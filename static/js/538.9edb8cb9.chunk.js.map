{"version":3,"file":"static/js/538.9edb8cb9.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/TrendingMoviesMarkup/TrendingMoviesMarkup.styled.jsx","components/TrendingMoviesMarkup/TrendingMoviesMarkup.jsx","components/pages/HomePage.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerContainer } from './Loader.styled';\n\n\nfunction Spinner() {\n  return (\n    <SpinnerContainer>\n      <RotatingLines\n        strokeColor=\"#37b2d9\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </SpinnerContainer>\n  );\n}\nexport default Spinner;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  border-radius: 5px;\n`;\n\nexport const Movies = styled.div`\n  padding-top: 30px;\n`;\nexport const MoviesListTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #000;\n  padding-top: 30px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: flex-start; \n  margin-bottom: 10px;\n  padding-right: 15px;\n  padding-left: 0; \n`;\n\nexport const Li = styled.li`\n  text-align: center;\n  width: 220px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  padding-left: 15px; \n`;\n\n\n\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  \n  width: 220px;\n  height: 330px;\n`;\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\nexport const Title = styled.p`\n  font-size: 12px;\n  font-weight: 900;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n \n  width: 100%;\n  left: 0;\n  bottom: 0;\n  height: 60px;\n  margin: 0;\n  background-color: rgba(43, 178, 180, 0.421);\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  padding-left: 15px; \n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Movies,\n  Ul,\n  Li,\n  StyledLink,\n  Img,\n  Title,\n  Thumb, \n  Wrapper\n} from './TrendingMoviesMarkup.styled';\nimport noImage from '../../NoImage.jpg';\n\nconst TrendingMoviesMarkup = ({ trendingMovies = [] }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n    <Movies>\n      <Ul>\n        {trendingMovies.map(movie => (\n          <Li key={movie.id}>\n            <StyledLink\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <Thumb>\n                {movie.poster_path ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    width={`200`}\n                    alt=\"preview\"\n                  />\n                ) : (\n                  <Img src={noImage} alt=\"No Image Available\" />\n                )}\n              </Thumb>\n              {movie.title && <Title>{movie.title}</Title>}\n              {movie.name && <Title>{movie.name}</Title>}\n            </StyledLink>\n          </Li>\n        ))}\n      </Ul>\n    </Movies>\n    </Wrapper>\n  );\n};\n\nexport default TrendingMoviesMarkup;","import React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getTrending } from 'services/Api';\nimport Spinner from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\nimport TrendingMoviesMarkup from 'components/TrendingMoviesMarkup/TrendingMoviesMarkup';\n\nfunction HomePage() {\n  // создаем State для ошибки, loading и для trendingMovies\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        // при запуске поиска ставим loading вкл\n        setLoading(true);\n        // отправляем запрос на сервер getTrending\n        const trendingMoviesData = await getTrending();\n        // записываем в State trendingMovies результат\n        setTrendingMovies(trendingMoviesData.results);\n        // отключаем loading \n        setLoading(false);\n      } catch (error) {\n        // если ошибка выводим сообщение\n        setError(error.message);\n        toast.error('Oops, something went wrong.');\n        // отключаем также загрузку\n        setLoading(false);\n      }\n    };\n// вызываем функцию при загрузки страницы\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      {loading && <Spinner />}\n      {error && <ToastContainer />}\n\n      <h2>Trending Movies</h2>\n      <TrendingMoviesMarkup trendingMovies={trendingMovies}/>\n      <ul>\n        {trendingMovies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}></Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default HomePage;","import axios from 'axios';\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\n// популярное\nexport const getTrending = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  };\n\n//   запрос по ключевому слову\nexport const getMovies = async query => {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: query,\n      },\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  };\n\n  // делати фильмов\n  export async function getMovieDetails(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=${API_KEY}`;\n  \n    try {\n      const response = await axios.get(url, {\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n\n\n  export const getMovieCredits = async (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n    \n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n     \n      return response.data;\n      \n    } catch (error) {\n      throw error;\n    }\n  };\n  \n\n  export const getMovieReviews = async movieId => {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  };\n  \n "],"names":["SpinnerContainer","styled","strokeColor","strokeWidth","animationDuration","width","visible","Movies","Ul","Li","StyledLink","Link","Thumb","Img","Title","Wrapper","trendingMovies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","noImage","title","name","useState","setTrendingMovies","loading","setLoading","error","setError","useEffect","fetchTrendingMovies","getTrending","trendingMoviesData","results","message","toast","API_KEY","axios","params","api_key","language","headers","Accept","response","data","getMovies","query","page","include_adult","getMovieDetails","url","getMovieCredits","movieId"],"sourceRoot":""}