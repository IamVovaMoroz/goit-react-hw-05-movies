{"version":3,"file":"static/js/439.8b0401ee.chunk.js","mappings":"uSAEaA,EAAmBC,EAAAA,EAAAA,IAAH,qJ,SCe7B,I,0CAAA,EAbA,WACE,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,KAIhB,E,oBCTYC,GAJUN,EAAAA,EAAAA,QAAH,+CAIEA,EAAAA,EAAAA,IAAH,+CAUNO,GAPkBP,EAAAA,EAAAA,GAAH,mHAOVA,EAAAA,EAAAA,GAAH,0LAUFQ,EAAKR,EAAAA,EAAAA,GAAH,uIAWFS,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,yEAKVW,EAAQX,EAAAA,EAAAA,IAAH,2GAOLY,EAAMZ,EAAAA,EAAAA,IAAH,4EAKHa,EAAQb,EAAAA,EAAAA,EAAH,iWAoBLc,EAAUd,EAAAA,EAAAA,IAAH,wE,UC1BpB,EAnC6B,SAAC,GAA6B,IAAD,IAA1Be,eAAAA,OAA0B,MAAT,GAAS,EAClDC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,WACA,SAACR,EAAD,WACE,SAACC,EAAD,UACGQ,EAAeG,KAAI,SAAAC,GAAK,OACvB,SAACX,EAAD,WACE,UAACC,EAAD,CACEW,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMP,GAFjB,WAIE,SAACL,EAAD,UACGQ,EAAMK,aACL,SAACZ,EAAD,CACEa,IAAG,0CAAqCN,EAAMK,aAC9CpB,MAAK,MACLsB,IAAI,aAGN,SAACd,EAAD,CAAKa,IAAKE,EAASD,IAAI,yBAG1BP,EAAMS,QAAS,SAACf,EAAD,UAAQM,EAAMS,QAC7BT,EAAMU,OAAQ,SAAChB,EAAD,UAAQM,EAAMU,WAjBxBV,EAAME,GADQ,SA0BhC,E,UC3CYP,EAAUd,EAAAA,GAAAA,IAAH,6CAIPM,EAASN,EAAAA,GAAAA,IAAH,oEAKNO,EAAKP,EAAAA,GAAAA,GAAH,qIAQFQ,GAAKR,EAAAA,GAAAA,GAAH,+CAIFS,IAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,8JAWVY,GAAMZ,EAAAA,GAAAA,IAAH,8UAMHW,GAAQX,EAAAA,GAAAA,IAAH,+CAML8B,GAAQ9B,EAAAA,GAAAA,IAAH,8mBAYd,qBAAG+B,MAAmB,aAAtB,IACA,qBAAGC,OAAqB,cAAxB,IAGSC,GAAYjC,EAAAA,GAAAA,KAAH,wIAMTkC,GAAalC,EAAAA,GAAAA,KAAH,uIAOVa,GAAQb,EAAAA,GAAAA,EAAH,iWCgBlB,GA5EoB,SAAC,GAAqB,IAAD,IAAlBmC,OAAAA,OAAkB,MAAT,GAAS,EACjCnB,GAAWC,EAAAA,EAAAA,MACjB,GAAwCmB,EAAAA,EAAAA,UAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAYC,EAAAA,EAAAA,QAAO,MAEnBC,EAAaN,EAAOO,QAE1BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAWC,aAAY,WAC3BP,GAAgB,SAACQ,GAAD,OAAgBA,EAAY,GAAKL,CAAjC,GACjB,GAAE,KAEH,OAAO,kBAAMM,cAAcH,EAApB,CACR,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACJJ,EAAUS,UACZT,EAAUS,QAAQC,MAAMC,UAAxB,sBAbe,IAaoCb,EAAnD,OACAE,EAAUS,QAAQC,MAAME,WAAa,2BAEjCd,IAAiBI,GACnBW,YAAW,WACTb,EAAUS,QAAQC,MAAME,WAAa,OACrCb,EAAgB,GAChBC,EAAUS,QAAQC,MAAMC,UAAxB,gBACAE,YAAW,WACTb,EAAUS,QAAQC,MAAME,WAAa,0BACtC,GAAE,EACJ,GAAE,KAGR,GAAE,CAACd,EAAcI,EA3BC,MAqCnB,OACE,SAAC,EAAD,WACE,UAAC,EAAD,YACE,SAACX,GAAD,CAAOuB,QAXW,WACtBf,GAAgB,SAACQ,GAAD,OAAgBA,EAAY,EAAIL,GAAcA,CAA9C,GACjB,EASsCV,MAAI,EAArC,UACE,SAACE,GAAD,OAEF,SAAC,EAAD,CAAIqB,IAAKf,EAAT,SACGJ,EAAOjB,KAAI,SAACC,EAAOoC,GAAR,OACV,SAAC,GAAD,WACE,UAAC,GAAD,CAAYnC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,WACE,SAAC,GAAD,UACGG,EAAMK,aACL,SAAC,GAAD,CACEC,IAAG,0CAAqCN,EAAMK,aAC9CE,IAAI,aAGN,SAAC,GAAD,CAAKD,IAAKE,EAASD,IAAI,0BAGzBP,EAAMS,OAAST,EAAMU,QACrB,SAAC,GAAD,UAAQV,EAAMS,OAAST,EAAMU,WAb1BV,EAAME,GADL,OAoBd,SAACS,GAAD,CAAOuB,QA/BW,WACtBf,GAAgB,SAACQ,GAAD,OAAgBA,EAAY,GAAKL,CAAjC,GACjB,EA6BsCT,OAAK,EAAtC,UACE,SAACE,GAAD,UAKT,ECjFKsB,GAAgB,CACpBC,SAAU,OACVC,WAAY,OACZC,UAAW,SACXC,UAAW,OACXC,cAAe,YACfC,UAAW,yBACXC,WAAY,iCACZC,UAAW,iCA+Db,OAhDA,WAEE,OAA4C5B,EAAAA,EAAAA,UAAS,IAArD,eAAOrB,EAAP,KAAuBkD,EAAvB,KACA,GAA8B7B,EAAAA,EAAAA,WAAS,GAAvC,eAAO8B,EAAP,KAAgBC,EAAhB,KACA,GAA0B/B,EAAAA,EAAAA,UAAS,MAAnC,eAAOgC,EAAP,KAAcC,EAAd,KAyBA,OAvBA1B,EAAAA,EAAAA,YAAU,WACR,IAAM2B,EAAmB,mCAAG,oGAGxBH,GAAW,GAHa,UAKSI,EAAAA,EAAAA,MALT,OAKlBC,EALkB,OAOxBP,EAAkBO,EAAmBC,SAErCN,GAAW,GATa,gDAYxBE,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAY,+BAEZR,GAAW,GAfa,yDAAH,qDAmBzBG,GACD,GAAE,KAGD,2BACGJ,IAAW,SAAC,EAAD,IACXE,IAAS,SAAC,KAAD,KACV,2BA5CS,sQA6CT,eAAInB,MAAOO,GAAX,SAA0B,qBAC1B,SAAC,GAAD,CAAarB,OAAQpB,IAAkB,KACvC,SAAC,EAAD,CAAsBA,eAAgBA,KACtC,wBACGA,EAAeG,KAAI,SAACC,GAAD,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,OADpBF,EAAME,GADG,QAQ3B,C,mMC7EKuD,EAAU,mCAEVC,EAAgBC,EAAAA,EAAAA,OAAa,CACjCC,QAAS,+BACTC,QAAS,CACPC,OAAQ,sBAICV,EAAW,mCAAG,6GAEAM,EAAcK,IAAI,sBAAuB,CAC9DC,OAAQ,CACNC,QAASR,EACTS,SAAU,WALS,cAEjBC,EAFiB,yBAQhBA,EAASC,MARO,oGAAH,qDAcXC,EAAS,mCAAG,WAAOC,GAAP,gGAEEZ,EAAcK,IAAI,gBAAiB,CACxDC,OAAQ,CACNC,QAASR,EACTS,SAAU,QACVK,KAAM,EACNC,eAAe,EACfF,MAAOA,KARU,cAEfH,EAFe,yBAWdA,EAASC,MAXK,oGAAH,sDAiBTK,EAAe,mCAAG,WAAOvE,GAAP,gGAEJwD,EAAcK,IAAd,iBAA4B7D,GAAM,CACvD8D,OAAQ,CACNC,QAASR,EACTS,SAAU,WALa,cAErBC,EAFqB,yBAQpBA,EAASC,MARW,oGAAH,sDAcfM,EAAe,mCAAG,WAAOC,GAAP,gGAEJjB,EAAcK,IAAd,iBAA4BY,EAA5B,YAA+C,CACpEX,OAAQ,CACNC,QAASR,EACTS,SAAU,WALa,cAErBC,EAFqB,yBAQpBA,EAASC,MARW,oGAAH,sDAcfQ,EAAe,mCAAG,WAAOD,GAAP,gGAEJjB,EAAcK,IAAd,iBAA4BY,EAA5B,YAA+C,CACpEX,OAAQ,CACNC,QAASR,EACTS,SAAU,WALa,cAErBC,EAFqB,yBAQpBA,EAASC,MARW,oGAAH,qD","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/TrendingMoviesMarkup/TrendingMoviesMarkup.styled.jsx","components/TrendingMoviesMarkup/TrendingMoviesMarkup.jsx","components/MovieSlider/MovieSlider.styled.jsx","components/MovieSlider/MovieSlider.jsx","pages/HomePage.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SpinnerContainer = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { SpinnerContainer } from './Loader.styled';\n\n\nfunction Spinner() {\n  return (\n    <SpinnerContainer>\n      <RotatingLines\n        strokeColor=\"#37b2d9\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </SpinnerContainer>\n  );\n}\nexport default Spinner;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  border-radius: 5px;\n`;\n\nexport const Movies = styled.div`\n  padding-top: 30px;\n`;\nexport const MoviesListTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #000;\n  padding-top: 30px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: flex-start; \n  margin-bottom: 10px;\n  padding-right: 15px;\n  padding-left: 0; \n`;\n\nexport const Li = styled.li`\n  text-align: center;\n  width: 220px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  padding-left: 15px; \n`;\n\n\n\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  \n  width: 220px;\n  height: 330px;\n`;\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\nexport const Title = styled.p`\n  font-size: 17px; \n  font-weight: 900;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n \n  width: 100%;\n  left: 0;\n  bottom: 0;\n  height: 60px;\n  margin: 0;\n  background-color: rgba(43, 178, 180, 0.421);\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  padding-left: 15px; \n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Movies,\n  Ul,\n  Li,\n  StyledLink,\n  Img,\n  Title,\n  Thumb, \n  Wrapper\n} from './TrendingMoviesMarkup.styled';\nimport noImage from '../../NoImage.jpg';\n\nconst TrendingMoviesMarkup = ({ trendingMovies = [] }) => {\n  const location = useLocation();\n\n  return (\n    <Wrapper>\n    <Movies>\n      <Ul>\n        {trendingMovies.map(movie => (\n          <Li key={movie.id}>\n            <StyledLink\n              to={`/movies/${movie.id}`}\n              state={{ from: location }}\n            >\n              <Thumb>\n                {movie.poster_path ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                    width={`200`}\n                    alt=\"preview\"\n                  />\n                ) : (\n                  <Img src={noImage} alt=\"No Image Available\" />\n                )}\n              </Thumb>\n              {movie.title && <Title>{movie.title}</Title>}\n              {movie.name && <Title>{movie.name}</Title>}\n            </StyledLink>\n          </Li>\n        ))}\n      </Ul>\n    </Movies>\n    </Wrapper>\n  );\n};\n\nexport default TrendingMoviesMarkup;","\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 20px;\n`;\n\nexport const Movies = styled.div`\n  position: relative;\n  overflow: hidden;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  transition: transform 1s ease-in-out;\n`;\n\nexport const Li = styled.li`\n  margin-right: 10px;\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  color: #333;\n  transition: opacity 0.3s ease;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  height: auto;\n  vertical-align: top; /* Добавлено свойство для убирания отступа снизу */\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n\n\n\nexport const Arrow = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 70px;\n  height: 40px;\n  background-color: rgba(25, 25, 26, 0.421); /* Измененный цвет */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 1;\n  ${({ left }) => left && 'left: 10px;'} /* Кнопка-стрелка слева */\n  ${({ right }) => right && 'right: 10px;'} /* Кнопка-стрелка справа */\n`;\n\nexport const LeftArrow = styled.span`\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  border-right: 8px solid #fff;\n`;\n\nexport const RightArrow = styled.span`\n  border-top: 6px solid transparent;\n  border-bottom: 6px solid transparent;\n  border-left: 8px solid #fff;\n`;\n\n\nexport const Title = styled.p`\n  font-size: 17px; \n  font-weight: 900;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n \n  width: 100%;\n  left: 0;\n  bottom: 0;\n  height: 60px;\n  margin: 0;\n  background-color: rgba(43, 178, 180, 0.421);\n`;","import React, { useEffect, useState, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Wrapper,\n  Movies,\n  Ul,\n  Li,\n  StyledLink,\n  Img,\n  Title,\n  Thumb,\n  Arrow,\n  LeftArrow,\n  RightArrow,\n} from './MovieSlider.styled';\nimport noImage from '../../NoImage.jpg';\n\nconst MovieSlider = ({ movies = [] }) => {\n  const location = useLocation();\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const sliderRef = useRef(null);\n  const slideWidth = 200; // Ширина каждого слайда (в пикселях)\n  const slideCount = movies.length; // Общее количество слайдов\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentSlide((prevSlide) => (prevSlide + 1) % slideCount);\n    }, 3000);\n\n    return () => clearInterval(interval);\n  }, [slideCount]);\n\n  useEffect(() => {\n    if (sliderRef.current) {\n      sliderRef.current.style.transform = `translateX(-${currentSlide * slideWidth}px)`;\n      sliderRef.current.style.transition = 'transform 1s ease-in-out';\n\n      if (currentSlide === slideCount) {\n        setTimeout(() => {\n          sliderRef.current.style.transition = 'none';\n          setCurrentSlide(0);\n          sliderRef.current.style.transform = `translateX(0)`;\n          setTimeout(() => {\n            sliderRef.current.style.transition = 'transform 1s ease-in-out';\n          }, 0);\n        }, 1000);\n      }\n    }\n  }, [currentSlide, slideCount, slideWidth]);\n\n  const handlePrevSlide = () => {\n    setCurrentSlide((prevSlide) => (prevSlide - 1 + slideCount) % slideCount);\n  };\n\n  const handleNextSlide = () => {\n    setCurrentSlide((prevSlide) => (prevSlide + 1) % slideCount);\n  };\n\n  return (\n    <Wrapper>\n      <Movies>\n        <Arrow onClick={handlePrevSlide} left>\n          <LeftArrow />\n        </Arrow>\n        <Ul ref={sliderRef}>\n          {movies.map((movie, index) => (\n            <Li key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                <Thumb>\n                  {movie.poster_path ? (\n                    <Img\n                      src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                      alt=\"preview\"\n                    />\n                  ) : (\n                    <Img src={noImage} alt=\"No Image Available\" />\n                  )}\n                </Thumb>\n                {(movie.title || movie.name) && (\n                  <Title>{movie.title || movie.name}</Title>\n                )}\n              </StyledLink>\n            </Li>\n          ))}\n        </Ul>\n        <Arrow onClick={handleNextSlide} right>\n          <RightArrow />\n        </Arrow>\n      </Movies>\n    </Wrapper>\n  );\n};\n\nexport default MovieSlider;\n","import React, { useEffect, useState } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getTrending } from 'services/Api';\nimport Spinner from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\nimport TrendingMoviesMarkup from 'components/TrendingMoviesMarkup/TrendingMoviesMarkup';\nimport MovieSlider from 'components/MovieSlider/MovieSlider';\n\n\nconst headingStyles = {\n  fontSize: '48px',\n  fontWeight: 'bold',\n  textAlign: 'center',\n  marginTop: '70px',\n  textTransform: 'uppercase',\n  animation: 'colorShift 9s infinite',\n  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.3)',\n  boxShadow: '0 8px 16px rgba(0, 0, 0, 0.2)',\n};\n\n// CSS keyframes\nconst keyframes = `\n  @keyframes colorShift {\n    0% { color: rgba(0, 121, 191, 0.8); }\n    25% { color: rgba(0, 186, 255, 0.8); }\n    50% { color: rgba(127, 219, 255, 0.8); }\n    75% { color: rgba(0, 186, 145, 0.8); }\n    100% { color: rgba(0, 121, 191, 0.8); }\n  }\n`;\n\n\nfunction HomePage() {\n  // создаем State для ошибки, loading и для trendingMovies\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        // при запуске поиска ставим loading вкл\n        setLoading(true);\n        // отправляем запрос на сервер getTrending\n        const trendingMoviesData = await getTrending();\n        // записываем в State trendingMovies результат\n        setTrendingMovies(trendingMoviesData.results);\n        // отключаем loading \n        setLoading(false);\n      } catch (error) {\n        // если ошибка выводим сообщение\n        setError(error.message);\n        toast.error('Oops, something went wrong.');\n        // отключаем также загрузку\n        setLoading(false);\n      }\n    };\n// вызываем функцию при загрузки страницы\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      {loading && <Spinner />}\n      {error && <ToastContainer />}\n      <style>{keyframes}</style>\n      <h2 style={headingStyles}>Trending Movies</h2>\n      <MovieSlider movies={trendingMovies} /> {/* Вставляем компонент MovieSlider с данными из trendingMovies */}\n      <TrendingMoviesMarkup trendingMovies={trendingMovies} />\n      <ul>\n        {trendingMovies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}></Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default HomePage;","import axios from 'axios';\n\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\nconst axiosInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Accept: 'application/json',\n  },\n});\n\nexport const getTrending = async () => {\n  try {\n    const response = await axiosInstance.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovies = async (query) => {\n  try {\n    const response = await axiosInstance.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: query,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async (id) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};"],"names":["SpinnerContainer","styled","strokeColor","strokeWidth","animationDuration","width","visible","Movies","Ul","Li","StyledLink","Link","Thumb","Img","Title","Wrapper","trendingMovies","location","useLocation","map","movie","to","id","state","from","poster_path","src","alt","noImage","title","name","Arrow","left","right","LeftArrow","RightArrow","movies","useState","currentSlide","setCurrentSlide","sliderRef","useRef","slideCount","length","useEffect","interval","setInterval","prevSlide","clearInterval","current","style","transform","transition","setTimeout","onClick","ref","index","headingStyles","fontSize","fontWeight","textAlign","marginTop","textTransform","animation","textShadow","boxShadow","setTrendingMovies","loading","setLoading","error","setError","fetchTrendingMovies","getTrending","trendingMoviesData","results","message","toast","API_KEY","axiosInstance","axios","baseURL","headers","Accept","get","params","api_key","language","response","data","getMovies","query","page","include_adult","getMovieDetails","getMovieCredits","movieId","getMovieReviews"],"sourceRoot":""}