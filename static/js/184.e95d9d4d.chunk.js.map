{"version":3,"file":"static/js/184.e95d9d4d.chunk.js","mappings":"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","sources":["components/MoviesPageMarkup/MoviesPageMarkup.styled.jsx","components/MoviesPageMarkup/MoviesPageMarkup.jsx","pages/MoviesPage.jsx","services/Api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  border-radius: 5px;\n`;\n\nexport const Movies = styled.div`\n  padding-top: 30px;\n`;\nexport const MoviesListTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: #000;\n  padding-top: 30px;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n  justify-content: flex-start; \n  margin-bottom: 10px;\n  padding-right: 15px;\n  padding-left: 0; \n`;\n\nexport const Li = styled.li`\n  text-align: center;\n  width: 220px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  padding-left: 15px; \n`;\n\n\n\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  border-radius: 5px;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n  overflow: hidden;\n  \n  width: 220px;\n  height: 330px;\n`;\nexport const Img = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n`;\nexport const Title = styled.p`\n  font-size: 17px; \n  font-weight: 900;\n  line-height: 1.14;\n  letter-spacing: 0.03em;\n\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  color: #ffffff;\n \n  width: 100%;\n  left: 0;\n  bottom: 0;\n  height: 60px;\n  margin: 0;\n  background-color: rgba(43, 178, 180, 0.421);\n`;\n\nexport const Wrapper = styled.div`\n  border-radius: 10px;\n  padding-left: 15px; \n`;","import React from 'react';\n\nimport {\n  Movies,\n  Ul,\n  Li,\n  StyledLink,\n  Img,\n  Title,\n  Thumb, \n  Wrapper\n} from './MoviesPageMarkup.styled';\nimport noImage from '../../NoImage.jpg';\n\nconst MoviesListMarkup = ({ movies, location }) => {\n\n    return (\n        <Wrapper>\n          <Movies>\n            <Ul>\n              {movies.map((movie) => (\n                <Li key={movie.id}>\n                  <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                    <Thumb>\n                      {movie.poster_path ? (\n                        <Img\n                          src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                          width={`200`}\n                          alt=\"preview\"\n                        />\n                      ) : (\n                        <Img src={noImage} alt=\"No Image Available\" />\n                      )}\n                    </Thumb>\n                    {movie.title && <Title>{movie.title}</Title>}\n                    {movie.name && <Title>{movie.name}</Title>}\n                  </StyledLink>\n                </Li>\n              ))}\n            </Ul>\n          </Movies>\n        </Wrapper>\n\n);\n\n\n}\n\nexport default MoviesListMarkup;","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMovies } from 'services/Api';\nimport MoviesListMarkup from 'components/MoviesPageMarkup/MoviesPageMarkup';\nimport \"../../src/components/Spinner/spinner.css\"\nimport eatingPopcornGif from '../eating-popcorn.gif';\n// import gifPopcorn from '../gif-popcorn.gif';\n\nconst MoviesPage = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearchExecuted, setIsSearchExecuted] = useState(false);\n\n  useEffect(() => {\n    if (isSearchExecuted && movies.length === 0 && !isLoading) {\n      toast.info('No movies found');\n    }\n  }, [movies.length, isSearchExecuted, isLoading]);\n\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n    if (!query) {\n      toast.error('Please enter a search query');\n      return;\n    }\n    searchMovies();\n  };\n\n  const updateQueryString = (evt) => {\n    setSearchParams({ query: evt.target.value });\n  };\n\n  const searchMovies = () => {\n    setIsLoading(true);\n    setIsSearchExecuted(true);\n    getMovies(query)\n      .then((data) => {\n        setMovies(data.results);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div style={{ textAlign: 'center', padding: '50px' }}>\n        <form\n        onSubmit={handleFormSubmit}\n        style={{\n          display: 'flex',\n          alignItems: 'flex-start',\n          justifyContent: 'center',\n        }}\n      >\n        <input\n          type=\"text\"\n          value={query}\n          onChange={updateQueryString}\n          placeholder=\"Search movie\"\n          style={{\n            padding: '10px',\n            marginRight: '10px',\n          \n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            fontSize: '26px',\n            outline: 'none',\n            transition: 'border-color 0.3s',\n          }}\n          className={query ? 'input-active' : ''}\n        />\n        <button\n          className=\"button\"\n          type=\"submit\"\n          style={{\n            padding: '10px 20px',\n            backgroundColor: 'rgba(0, 121, 191, 0.8)',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            fontSize: '26px',\n            cursor: 'pointer',\n            outline: 'none',\n            transition: 'background-color 0.3s',\n          }}\n        >\n          Search\n        </button>\n      </form>\n{/* gif */}\n      <div style={{ marginTop: '150px',  }}>\n      <img\n        src={eatingPopcornGif}\n        alt=\"Eating Popcorn\"\n        style={{ width: '880px', height: '700px' }}\n      />\n    </div>\n\n      {isLoading && <div><span className=\"loader\"></span></div>}\n      {isSearchExecuted && movies.length === 0 && !isLoading && (\n        <div style={{color: ' rgba(0, 121, 191, 0.8)', marginTop: '150px', fontSize: '30px', fontWeight: '800', textTransform: 'uppercase' }}>\n        No movies found\n      </div>\n      )}\n       {movies.length > 0 && (\n        <MoviesListMarkup movies={movies} location={location} />\n      )}\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n           \n            <Link to={`${movie.id}`} state={{ from: location }}>\n             \n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n\n\n// Делаем скилет - пути\n// import React from 'react';\n// import { useEffect, useState } from 'react';\n// import { Link, useLocation, useSearchParams } from 'react-router-dom';\n\n// import { toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n// import { getTrending } from 'services/Api';\n// import './MoviesPage.css';\n\n\n// const MoviesPage = () => {\n// // получаем масив фильмов с сервера\n// // добавляем определение местоположения для возврата сюда\n// const location = useLocation()\n// const [movies, setMovies] = useState([]);\n// // searchParams - аткуальное значение из url , setSearchParams - меняет url. Добавлением обьекта\n// const [searchParams, setSearchParams] = useSearchParams()\n// // если нет query то пустая строка, чтобы небыло ошибки\n// const query = searchParams.get(\"query\") ?? \"\"\n// const [isLoading, setIsLoading] = useState(false);\n\n//   // можно получить значение из url с помощью метода searchParams.get(\"a\")) a - ключ, значение которого нам нужно получить послезнака вопроса\n//   // http://localhost:3000/goit-react-hw-05-movies/movies?a=5&b=10\n//   // searchParams.get(\"a\") =>  5\n// // console.log(searchParams.get(\"a\")) \n// // по типу state, записываем значение Query в const и доавляем как value input. Для сохранения значения введённого пользователем в input\n\n\n// console.log(query)\n// // useEffect(() => {\n\n\n// //   return () => {\n// //    http запрос\n// //   };\n// // }, [query])\n\n\n// useEffect(() => {\n\n\n//   setIsLoading(true);\n\n//   const response = getTrending();\n//   response.then(data =>{\n\n  \n\n\n//     // setMovies(data.results);\n  \n//     setIsLoading(false);\n//   } ).catch(error => console.log(error));\n\n// }, [movies, query]);\n\n\n\n// const updateQueryString = evt => {\n//   // если evt.target.value \"\" записываем{} если есть то значение\n//   if(evt.target.value === \"\"){\n//    return setSearchParams({})\n//   }\n  \n//   setSearchParams({query: evt.target.value})\n// }\n\n// // const visibleMovies = movies.filter( movie => movie.includes(query))\n\n\n\n\n\n// console.log(location)\n//   return (\n//     <div>\n\n//       <input type=\"text\" value={query} onChange={updateQueryString} />\n\n//       <button className='button' onClick={()=> setSearchParams({})}>Clear Search</button>\n      \n//       <ul>\n//       {/* {movies.map( movie => { visibleMovies*/ }\n//      {movies.map( movie => {\n//       // `${movie}` чтобы прописать путь url и для строк и цифр для получаемых. Link - активная ссылку\n//       return (\n//       <li key={movie}>\n//       <Link  to={`${movie}`} state={{from:location}}>{movie}</Link>\n//       </li>\n//       );\n//       })}\n//       </ul>\n//     </div>\n//   );\n// };\n\n// export default MoviesPage\n","import axios from 'axios';\nconst API_KEY = 'a148ed5961285512fd3954af576af4a0';\n\n// популярное\nexport const getTrending = async () => {\n    const response = await axios.get('https://api.themoviedb.org/3/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  };\n\n//   запрос по ключевому слову\nexport const getMovies = async query => {\n    const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: query,\n      },\n      headers: {\n        Accept: 'application/json',\n      },\n    });\n    return response.data;\n  };\n\n  // делати фильмов\n  export async function getMovieDetails(id) {\n    const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=${API_KEY}`;\n  \n    try {\n      const response = await axios.get(url, {\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n  \n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n\n\n  export const getMovieCredits = async (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits`;\n    \n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n        },\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n     \n      return response.data;\n      \n    } catch (error) {\n      throw error;\n    }\n  };\n  \n\n  export const getMovieReviews = async (movieId) => {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews`;\n    \n    try {\n      const response = await axios.get(url, {\n        params: {\n          api_key: API_KEY,\n          language: 'en-US',\n          // page: 1,\n        },\n        headers: {\n          Accept: 'application/json',\n        },\n      });\n     \n      return response.data;\n      \n    } catch (error) {\n      throw error;\n    }\n  };"],"names":["Movies","styled","Ul","Li","StyledLink","Link","Thumb","Img","Title","Wrapper","movies","location","map","movie","to","id","state","from","poster_path","src","width","alt","noImage","title","name","useLocation","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","isLoading","setIsLoading","isSearchExecuted","setIsSearchExecuted","useEffect","length","toast","searchMovies","getMovies","then","data","results","catch","error","console","log","style","textAlign","padding","onSubmit","event","preventDefault","display","alignItems","justifyContent","type","value","onChange","evt","target","placeholder","marginRight","border","borderRadius","fontSize","outline","transition","className","backgroundColor","color","cursor","marginTop","eatingPopcornGif","height","fontWeight","textTransform","API_KEY","getTrending","axios","params","api_key","language","headers","Accept","response","page","include_adult","getMovieDetails","url","getMovieCredits","movieId","getMovieReviews"],"sourceRoot":""}